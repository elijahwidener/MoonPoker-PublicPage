@startuml
package "Frontend" {
left to right direction
  package "Screens" {
    class HomeScreen {
      +showMenu(): void
      +navigateToGameManagement(): void
      +navigateToAccount(): void
      +playGame(): void
    }


    class TableScreen {
      +showCards(): void
      +showCommunityCards(): void
      +showPlayerActions(): void
      +showPotAmount(): void
      +showPlayerChips(): void
      +sendPlayerAction(): void
    }

    class OptionsScreen {
      +playersScreen(): void
      +gameSettingsScreen(): void
      +accountPreferences(): void
      +videoAudioSettings(): void
    }

    class AccountScreen {
      +showAccountInfo(): void
      +updateAccountInfo(): void
      +showTransactionHistory(): void
    }

    class LoginScreen {
      +login(): void
      +registerNewAccount(): void
    }

    class GameSettingsScreen {
      +updateGameSettings(): void
    }
    class AccountPreferencesScreen {
      +showAccountPreferences(): void
      +updateAccountPreferences(): void
    }
    class VideoAudioSettingsScreen {
      +showVideoAudioSettings(): void
      +updateVideoAudioSettings(): void
    }
    class ManagePlayersScreen {
      +editPlayer(): void
      +addPlayer(): void
      +removePlayer(): void
    }
  }
  package "Widgets" 
  {
    class GameSettingsWidget {
            -showBlinds
            -showMaxPlayers
            -showTimeLimits
            -showGameType
            -showRunItTwice
            -showRabbitHunting
            -showAllowStraddle
        }
    class PlayerActionButtons {
      -showCheckButton
      -showFoldButton
      -showCallButton
      -showRaiseButton
    }

    class ChatWidget {
      +showChatMessages(): void
      +sendChatMessage(message: String): void
    }
  }

  package "Services" {
    class ApiService {
      +fetchGameList(): Future<List<Game>>
      +createGame(settings: GameSettings): Future<Game>
      +joinGame(gameId: String): Future<void>
      +fetchPlayerInfo(): Future<Player>
      +updatePlayerInfo(player: Player): Future<void>
    }

    class WebSocketService {
      +connect(url: String): void
      +disconnect(): void
      +sendMessage(message: String): void
      +onMessage(callback: Function): void
    }
  }

  package "Models" {
    class Game {
      +id: String
      +players: List<Player>
      +status: GameStatus
    }

    class Player {
      +id: String
      +name: String
      +chips: int
    }

    enum GameStatus {
      WAITING
      STARTED
      ENDED
    }
  }

  HomeScreen --> AccountScreen
  HomeScreen --> LoginScreen
  HomeScreen --> TableScreen : playGame

  TableScreen --> PlayerActionButtons
  TableScreen --> ChatWidget
  TableScreen --> GameSettingsWidget
  TableScreen --> OptionsScreen

  OptionsScreen --> GameSettingsScreen
  OptionsScreen --> AccountPreferencesScreen
  OptionsScreen --> VideoAudioSettingsScreen
  OptionsScreen --> ManagePlayersScreen
  

  ManagePlayersScreen --> ApiService
  GameSettingsScreen --> ApiService
  AccountScreen --> ApiService
  LoginScreen --> ApiService

  TableScreen --> WebSocketService

  ApiService --> Game
  ApiService --> Player
  WebSocketService --> Game




}
@enduml